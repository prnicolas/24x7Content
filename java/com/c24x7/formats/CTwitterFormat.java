// Copyright 2010-2011 Patrick Nicolas
package com.c24x7.formats;

import java.io.IOException;

import twitter4j.TwitterException;

import com.c24x7.nlservices.CNlOutputFormatter.AFormatProxy;
import com.c24x7.nlservices.content.CStructuredOutput;
import com.c24x7.clients.CTwitterClient;
import com.c24x7.util.logs.CLogger;
import com.c24x7.util.CXMLConverter;


/**
 * <p>Format the generated output as a tweet. Select the closest sentence or summary about the content.
 * to fit into a Tweet. The excess of the content generated is 
 * loaded into a page/link.</p>
 * @author Patrick Nicolas
 * @date 11/28/2010
 * @see com.c24x7.nlservices.CNlOutputFormatter.ATargetProxy
 */
public final class CTwitterFormat extends AFormatProxy {

	private final static int MAX_CHARS = 140;
	private static String oldTweet = "x";
	private CTwitterClient 	_handle = null;
	private String			_tweet  = null;
	private String 			_link 	= "http://tinyUrl/U89HC";

		/**
		 * <p>Generates a output content formatted for Twitter from a list of generated sentences (NLG)</p>
		 * @param structuredOutput structured content generated by NLG engine
		 * @throws IllegalArgumentException if argument is null
		 * @throws IOException if generated content cannot be retrieved.
		 */
	public void format(CStructuredOutput structuredOutput) throws IOException {
		if(structuredOutput == null) {
			throw new IllegalArgumentException("Structured Output is undefined!");
		}		
		_error = null;
		
		/*
		 * Discard repeated or duplicate tweets..
		 */
		String newTweet = structuredOutput.getTitle().trim();
		System.out.println("Old tweet: " + oldTweet + "\nNew tweet: " + newTweet);
		
		if(oldTweet.compareTo(newTweet) == 0) {
			_error = "Tweet already sent!";
			_handle = null;
		}
	
		else {
			_tweet = newTweet;
			
			if(_tweet.length() > MAX_CHARS) {
				_tweet = _tweet.substring(0, MAX_CHARS-1);
				CLogger.warn("Tweet:" + _tweet + " is too long");
			}

			/*
			 * Load the Twitter REST client
			 */
			if( _handle == null) {
				try {
					_handle = new CTwitterClient(_env);
					_head = "http://twitter.com/" + _handle.getTarget();
				}
				catch( TwitterException e) {
					_error = e.toString();
					CLogger.error("Twitter error: " + _error);
				}
			}
			debug(structuredOutput.toString(), "twitter/");
		}
	}

	
	/**
	 * <p>Build the results stream for the request to social network</p>
	 * @return String to be streamed back to the front-end processor
	 */

	public String results() {
		StringBuilder buf = new StringBuilder();
		if(_error == null) {
			buf.append( CXMLConverter.put(CXMLConverter.HEAD_TAG, _head) );
			buf.append( CXMLConverter.put(CXMLConverter.TWEET_TAG, _tweet) );
			buf.append( CXMLConverter.put(CXMLConverter.LINK_TAG, _link) );
		}
		else {
			buf.append( CXMLConverter.put(CXMLConverter.ERROR_TAG, _error) );
		}
		return CXMLConverter.put(CXMLConverter.TWITTER_TAG, buf.toString());
	}


	/**
	 * <p>Process the request to the social network target site.
	 * The process is executed within a separate thread.</p>
	 */
	protected void process() {
		try {
			if( _handle != null ) {
				_handle.update(_tweet);
				oldTweet = _tweet;
			}
		}
		catch( IOException e) {
			_error = "Error processing " + _head;
			CLogger.error("Twitter Error:" + e.toString());
		}
	}
}
// -------------------------------  EOF -----------------------------------
