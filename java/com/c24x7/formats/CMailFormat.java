// Copyright (C) 2010-2012 Patrick Nicolas
package com.c24x7.formats;

import java.io.IOException;

import com.c24x7.util.string.CXMLConverter;
import com.c24x7.clients.CMailClient;
import com.c24x7.formats.CFormatter.AFormatProxy;



		/**
		 * <p>Nested class that format generated content for email through SMTP and SMTP+SSL protocol.</p>
		 * @author Patrick Nicolas
		 * @date 12/07/2010
		 */
public final class CMailFormat extends AFormatProxy {
	protected CMailClient _handle = null;
	protected String		_body  = null;
	protected String		_to	   = null;

	
	public AFormatProxy create() {
		return new CMailFormat();
	}
	
		/**
		 * <p>Construct an email message from the output generated from the NLG engine</p>
		 * @param structuredOutput structured content generated by NLG engine
		 * @throws IllegalArgumentException if argument is null
		 * @throws IOException if content cannot be retrieved
		 */
	public void createMsg(CExtractor extractor) {
		if( _handle == null) {
			_handle = new CMailClient();
		}
		_head = _handle.getUserName() + " to:" + new String(_handle.getToListString());
		String body = extractor.getBody();
		if( body != null ) {
			_body = new String(body.substring(0, 1028));
		}
	}
	

	
	/**
	 * <p>Build the results stream for the request to social network</p>
	 * @return String to be streamed back to the front-end processor
	 */

	public String results() {
		StringBuilder buf = new StringBuilder();
		if (_error == null) {
			buf.append( CXMLConverter.put(CXMLConverter.HEAD_TAG, _head) );
			buf.append( CXMLConverter.put(CXMLConverter.TO_TAG, _to) );
			buf.append( CXMLConverter.put(CXMLConverter.SUBJECT_TAG, _msg) );
			buf.append( CXMLConverter.put(CXMLConverter.BODY_TAG, _body) );
		}
		else {
			buf.append(CXMLConverter.put(CXMLConverter.ERROR_TAG, _error));
		}

		return CXMLConverter.put(CXMLConverter.EMAIL_TAG, buf.toString());
	}
	
	/**
	 * <p>Process the request to the social network target site.
	 * The process is executed within a separate thread.</p>
	 */
	/*
	protected void process() {
		try {
			if (_handle != null) {
				_handle.setSubject(_msg);
				_handle.update(_body);
				old = _msg;
			}
		}
		catch(IOException e) {
			_error = "Failed sending email" + e.toString();
			CLogger.error("Email processing error:" + _error);
		}
	}
	*/
	
	protected void extractMessage(CExtractor extractor) {
		_msg = extractor.getSubject();
	}

}

// -------------------------------------- EOF ---------------------------