// Copyright 2010-2011 Patrick Nicolas
package com.c24x7.formats;

import java.io.IOException;

import com.c24x7.nlservices.CNlOutputFormatter.AFormatProxy;
import com.c24x7.nlservices.content.CStructuredOutput;
import com.c24x7.util.CConvertToHTML;
import com.c24x7.util.CEnv;
import com.c24x7.util.logs.CLogger;
import com.c24x7.util.CXMLConverter;
import com.c24x7.clients.CFTPClient;


/**
 * <p>Generate content for a full or partial update of a web page.
 * The web filter relies on the maximum number of character, the target
 * URL and optionally the id of a DOM element to be updated..</p>
 * @author Patrick Nicolas
 * @date 11/28/2010
 * @see com.c24x7.nlservices.CNlOutputFormatter.AFormatProxy
 */
public final class CWebFormat extends AFormatProxy {
	private static String oldPost = "x";

	private CFTPClient _handle 	  = null;
	private String	   _inputFile = null;
	private String 	   _title	  = null;
	private String	   _body	  = null;

		/**
		 * <p>If there is no id attached to the generated content,
		 * it will be inserted into a new page, otherwise extract a div
		 * component from the ID and insert the new content.</p>
		 * @param structuredOutput structured content generated by NLG engine
		 * @throws IllegalArgumentException if argument is null
		 * @throws IOException if content cannot be retrieved
		 */
	public void format(CStructuredOutput structuredOutput) throws IOException {	
		if(structuredOutput == null) {
			throw new IllegalArgumentException("Structured Output is undefined!");
		}
		
		String newPost = structuredOutput.getDescription().trim();
		if(oldPost.compareTo(newPost) == 0) {
			_error = "Web page already sent!";
			_handle = null;
		}
		else {
		
			/*
			 * Create the input FTP file
			 */
			_inputFile = CLogger.createFileName(CEnv.LOCAL_FTP_PATH, "ftp_", "html");
			_title = structuredOutput.getTitle();
			_body = newPost;
			write(_inputFile,  CConvertToHTML.convert(_title, _body));
			/*
			 * Initiate the FTP connection and send the content of the file
			 */
			if( _handle == null) {
				_handle= new CFTPClient(_env);
				_head = _handle.getUrlStr();
			}
			
			/*
			 * If debug mode is selected then a file is generated
			 * to contain the duplicated message.
			 */
			debug(structuredOutput.toString(), "web/");
		}
	}
	
	


	/**
	 * <p>Build the results stream for the request to social network</p>
	 * @return String to be streamed back to the front-end processor
	 */

	public String results() {
		StringBuilder buf = new StringBuilder();
		if( _error == null ) {
			buf.append( CXMLConverter.put(CXMLConverter.HEAD_TAG, _head) );
			buf.append( CXMLConverter.put(CXMLConverter.TITLE_TAG, _title) );
			buf.append( CXMLConverter.put(CXMLConverter.BODY_TAG, _body) );
		}
		else {
			buf.append(CXMLConverter.put(CXMLConverter.ERROR_TAG, _error));
		}

		return CXMLConverter.put(CXMLConverter.WEB_TAG, buf.toString());
	}
	
	/**
	 * <p>Process the request to the social network target site.
	 * The process is executed within a separate thread.</p>
	 */
	protected void process() {
		try {
			_handle.update(_inputFile);
		}
		catch( IOException e) {
			_error = e.toString();
			CLogger.error("Web processing error:" + _error);
		}
	}
}


// ------------------------------  EOF ----------------------------
